---
- name: Install and configure Kubernetes cluster on RHEL 9
  hosts: master
  become: yes
  vars:
    kube_version: "1.31.1"
    pod_network_cidr: "192.168.0.0/16" 

  tasks:
  - name: Disable SELinux enforcement
    ansible.posix.selinux:
      state: permissive
      policy: targeted  

  - name: Disable firewalld
    ansible.builtin.systemd:
      name: firewalld
      state: stopped
      enabled: no

  - name: Disable swap
    ansible.builtin.command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Remove swap from fstab
    ansible.builtin.replace:
      path: /etc/fstab
      regexp: '^.*swap.*$'
      replace: ''

  - name: Add Docker repository
    get_url:
      url: https://download.docker.com/linux/centos/docker-ce.repo
      dest: /etc/yum.repos.d/docker-ce.repo
      mode: '0644'

  - name: Install required packages
    ansible.builtin.dnf:
      name:
        - curl
        - wget
        - vim
        - git
        - net-tools
        - containerd
      state: present

  - name: Enable and configure containerd
    block:
      - name: Generate default config for containerd
        ansible.builtin.command: containerd config default
        register: containerd_config

  - name: Create containerd config file
    ansible.builtin.copy:
        dest: /etc/containerd/config.toml
        content: "{{ containerd_config.stdout }}"

  - name: Enable SystemdCgroup in containerd
    ansible.builtin.replace:
      path: /etc/containerd/config.toml
      regexp: 'SystemdCgroup = false'
      replace: 'SystemdCgroup = true'

  - name: Restart containerd
    ansible.builtin.systemd:
      name: containerd
      state: restarted
      enabled: yes

  - name: Load br_netfilter module
    ansible.builtin.shell: modprobe br_netfilter

  - name: Apply sysctl params for Kubernetes networking
    ansible.builtin.blockinfile:
      path: /etc/sysctl.d/k8s.conf
      block: |
        net.bridge.bridge-nf-call-iptables = 1
        net.ipv4.ip_forward = 1
        net.bridge.bridge-nf-call-ip6tables = 1
      create: yes

  - name: Reload sysctl
    ansible.builtin.command: sysctl --system

  - name: Add Kubernetes YUM repository
    ansible.builtin.yum_repository:
      name: kubernetes
      description: Kubernetes Repo
      baseurl: https://pkgs.k8s.io/core:/stable:/v{{ kube_version.split('.')[0] }}.{{ kube_version.split('.')[1] }}/rpm/
      enabled: yes
      gpgcheck: yes
      repo_gpgcheck: yes
      gpgkey: https://pkgs.k8s.io/core:/stable:/v{{ kube_version.split('.')[0] }}.{{ kube_version.split('.')[1] }}/rpm/repodata/repomd.xml.key

  - name: Install Kubernetes tools
    ansible.builtin.dnf:
      name:
        - kubelet
        - kubeadm
        - kubectl
      state: present
      disable_excludes: kubernetes

  - name: Enable kubelet
    ansible.builtin.systemd:
      name: kubelet
      enabled: yes
      state: started

  - name: Initialize Kubernetes control plane with kubeadm
    shell: kubeadm init --pod-network-cidr={{ pod_network_cidr }} > /root/kubeadm-init.log 2>&1
    register: kubeadm_init
    ignore_errors: yes

  - name: Create .kube directory
    file:
      path: /root/.kube
      state: directory
      mode: '0755'

  - name: Copy admin.conf to user's kube config
    copy:
      src: /etc/kubernetes/admin.conf
      dest: /root/.kube/config
      remote_src: yes
      owner: root
      group: root
      mode: '0644'

  - name: Wait for Kubernetes API server to be ready
    uri:
      url: https://localhost:6443/healthz
      method: GET
      validate_certs: no
      status_code: 200
    register: result
    retries: 20
    delay: 10
    until: result.status == 200

  - name: Install Calico CNI
    ansible.builtin.shell: |
      kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.0/manifests/calico.yaml
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf

  - name: Generate join command for worker nodes
    shell: kubeadm token create --print-join-command
    register: join_cmd

  - name: Set join command as a fact
    set_fact:
      kube_join_command: "{{ join_cmd.stdout }}"

  - name: Save join command to a file for sharing with worker nodes
    copy:
      dest: /root/kubeadm-join.sh
      content: "#!/bin/bash\n{{ kube_join_command }}\n"
      mode: '0755'

- name: Join worker nodes to Kubernetes cluster
  hosts: workers
  become: yes
  vars:
    kube_join_command: ""
  tasks:

  - name: Fetch kubeadm join script from master
    fetch:
      src: /root/kubeadm-join.sh
      dest: /tmp/kubeadm-join.sh
      flat: yes
    delegate_to: k8s-master.henogez.com

  - name: Copy join script to worker
    copy:
      src: /tmp/kubeadm-join.sh
      dest: /root/kubeadm-join.sh
      mode: '0755'

  - name: Join node to cluster
    shell: /root/kubeadm-join.sh
